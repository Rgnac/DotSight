<Window x:Class="Crosshair.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="DotSight Settings" Height="475" Width="300"
        Background="{StaticResource DarkBackgroundBrush_2}">
        
    <Window.Resources>
        <!-- Clickable ComboBox Template (with click-through arrow) -->
        <ControlTemplate x:Key="ClickableComboBoxTemplate" TargetType="ComboBox">
            <Grid>
                <!-- Main Border -->
                <Border
                    x:Name="MainBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="4" />
                
                <!-- Content Presenter -->
                <ContentPresenter
                    x:Name="ContentPresenter"
                    Margin="6,2,30,2"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                
                <!-- PART_EditableTextBox (required for ComboBox to function) -->
                <TextBox x:Name="PART_EditableTextBox" 
                         Visibility="Hidden" 
                         IsReadOnly="{TemplateBinding IsReadOnly}" />
                
                <!-- This toggle button covers the ENTIRE ComboBox, including the arrow area -->
                <ToggleButton 
                    x:Name="PART_ToggleButton"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    ClickMode="Press"
                    Focusable="False">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                
                <!-- Arrow visual (just decorative now) -->
                <Path 
                    x:Name="DropDownArrow"
                    Data="M 0 0 L 8 8 L 16 0 Z"
                    Fill="{StaticResource LightForegroundBrush}"
                    Stretch="Uniform"
                    Width="12"
                    Height="8"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Margin="0,0,10,0"
                    IsHitTestVisible="False"/>  <!-- Make the arrow not respond to hits -->
                
                <!-- Dropdown Popup -->
                <Popup
                    x:Name="PART_Popup"
                    IsOpen="{TemplateBinding IsDropDownOpen}"
                    AllowsTransparency="True"
                    Focusable="False"
                    PopupAnimation="Slide"
                    Placement="Bottom">
                    <Border
                        Background="{StaticResource VibrantGradientBrush}"
                        BorderBrush="{StaticResource VibrantGradientBrush}"
                        BorderThickness="2"
                        CornerRadius="4"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <ScrollViewer SnapsToDevicePixels="True">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
            <!-- Visual state triggers -->
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource StartOfGradientBrush}"/>
                </Trigger>
                <Trigger Property="IsDropDownOpen" Value="True">
                    <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource EndOfGradientBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    
    <StackPanel Margin="10" VerticalAlignment="Top">
        <!-- Profile Management Section -->
        <GroupBox Header="Profile Management" Margin="0,0,0,10">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Profile selection - selects and automatically loads the profile -->
                <ComboBox x:Name="ProfileComboBox" 
                          Grid.Row="0" 
                          Grid.Column="0"
                          Margin="0,0,5,0"
                          SelectionChanged="ProfileComboBox_SelectionChanged"
                          Template="{StaticResource ClickableComboBoxTemplate}" />
                
                <!-- Delete profile button -->
                <Button x:Name="DeleteProfileButton" 
                        Content="Delete" 
                        Grid.Row="0" 
                        Grid.Column="1"
                        Width="90"
                        Click="DeleteProfileButton_Click"/>
                
                <!-- Create new profile section -->
                <TextBox x:Name="NewProfileNameTextBox" 
                         Grid.Row="1" 
                         Grid.Column="0" 
                         Margin="0,5,5,0">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Foreground" Value="{StaticResource LightForegroundBrush}"/>
                            <Setter Property="Background" Value="{StaticResource DarkBackgroundBrush_2}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource VibrantGradientBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="CaretBrush" Value="{StaticResource LightForegroundBrush}"/>
                            <Setter Property="SelectionBrush" Value="{StaticResource StartOfGradientBrush}"/>
                            <Setter Property="SelectionTextBrush" Value="{StaticResource LightForegroundBrush}"/>
                            <Setter Property="Padding" Value="5,2"/>
                            
                            <!-- Custom control template to handle focus without changing background -->
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TextBox">
                                        <Border x:Name="border" 
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="4">
                                            <Grid>
                                                <!-- Placeholder text -->
                                                <TextBlock x:Name="placeholder" 
                                                           Text="New profile name..." 
                                                           Foreground="Gray" 
                                                           Padding="5,2,0,0" 
                                                           Visibility="Collapsed"/>
                                                
                                                <!-- Actual text entry -->
                                                <ScrollViewer x:Name="PART_ContentHost" 
                                                              Focusable="False" 
                                                              Background="Transparent"
                                                              Padding="{TemplateBinding Padding}"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource StartOfGradientBrush}"/>
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource StartOfGradientBrush}"/>
                                                <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                                            </Trigger>
                                            <Trigger Property="Text" Value="">
                                                <Setter TargetName="placeholder" Property="Visibility" Value="Visible"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                
                <Button x:Name="CreateNewButton" 
                        Content="Create New" 
                        Grid.Row="1" 
                        Grid.Column="1"
                        Margin="0,5,0,0"
                        Width="90"
                        Click="CreateNewButton_Click"/>
            </Grid>
        </GroupBox>

        <!-- Existing Settings Section -->
        <CheckBox x:Name="CrosshairToggle" Content="Enable Crosshair" IsChecked="True" Margin="0,0,0,10"/>
        <StackPanel Orientation="Horizontal" Margin="0,10,0,10">
            <Button x:Name="CrosshairsButton" Content="Crosshairs" Width="120" Margin="0,0,10,0" Click="CrosshairsButton_Click"/>
            <Button x:Name="CustomCrosshairButton" Content="Custom Editor" Width="120" Click="CustomCrosshairButton_Click"/>
        </StackPanel>
        <WrapPanel x:Name="CrosshairsPanel" Visibility="Collapsed" Margin="0,0,0,10"/>
        <TextBlock Text="Game Window Name" />
        <ComboBox x:Name="GameComboBox" 
                  Margin="0,0,0,10"
                  Template="{StaticResource ClickableComboBoxTemplate}">
            <ComboBoxItem Content="Center on screen" IsSelected="True"/>
            <ComboBoxItem Content="Notatnik"/>
            <ComboBoxItem Content="Rust"/>
        </ComboBox>

        <TextBlock Text="Crosshair Color" Margin="0,10,0,0"/>
        <ComboBox x:Name="ColorComboBox" 
                  SelectionChanged="ColorComboBox_SelectionChanged" 
                  Margin="0,0,0,10"
                  Template="{StaticResource ClickableComboBoxTemplate}">
            <ComboBoxItem Content="Red" IsSelected="True"/>
            <ComboBoxItem Content="Green"/>
            <ComboBoxItem Content="Blue"/>
            <ComboBoxItem Content="Yellow"/>
            <ComboBoxItem Content="White"/>
            <ComboBoxItem Content="Cyan"/>
            <ComboBoxItem Content="Magenta"/>
        </ComboBox>
        
        <!-- Thickness slider row -->
        <TextBlock Text="Crosshair Thickness" Margin="0,10,0,0"/>
        <StackPanel Orientation="Horizontal">
            <Slider x:Name="ThicknessSlider" Minimum="0.1" Maximum="10" ValueChanged="ThicknessSlider_ValueChanged" Width="230"/>
            <TextBlock Text="{Binding ElementName=ThicknessSlider, Path=Value, StringFormat={}{0:F2}}"
                       Margin="10,0,0,0"
                       VerticalAlignment="Center"
                       Foreground="White"/>
        </StackPanel>

        <!-- Size slider row -->
        <TextBlock Text="Crosshair Size" Margin="0,10,0,0"/>
        <StackPanel Orientation="Horizontal">
            <Slider x:Name="SizeSlider" Minimum="0.1" Maximum="50" ValueChanged="SizeSlider_ValueChanged" Width="230"/>
            <TextBlock Text="{Binding ElementName=SizeSlider, Path=Value, StringFormat={}{0:F2}}"
                       Margin="10,0,0,0"
                       VerticalAlignment="Center"
                       Foreground="White"/>
        </StackPanel>

        <!-- Settings buttons -->
        <StackPanel Orientation="Horizontal" Margin="0,20,0,0" HorizontalAlignment="Center">
            <Button x:Name="SaveSettingsButton" 
                    Content="Save Current Profile" 
                    Width="120" 
                    Margin="0,0,10,0"
                    HorizontalAlignment="Center"
                    Click="SaveSettingsButton_Click"/>
            <!-- Update the button to reload the current profile -->
            <Button x:Name="ReloadProfileButton" 
                    Content="Reload Profile" 
                    Width="120" 
                    Click="ReloadProfileButton_Click"/>
        </StackPanel>
    </StackPanel>
</Window>
